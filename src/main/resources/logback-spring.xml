<?xml version="1.0" encoding="UTF-8"?>
<configuration scan="true" scanPeriod="30 seconds">
    <!-- 定义变量 -->
    <property name="LOG_DIR" value="/app/logs/systemArchitecture" />
    <property name="LOG_PATTERN" value="%d{yyyy-MM-dd HH:mm:ss.SSS} [%thread] %-5level %logger{36} - %msg%n" />

    <!-- 1. 控制台输出 (常用于容器环境) -->
    <appender name="CONSOLE" class="ch.qos.logback.core.ConsoleAppender">
        <encoder>
            <pattern>${LOG_PATTERN}</pattern>
            <charset>UTF-8</charset>
        </encoder>
        <!-- 生产环境可限制控制台输出级别 -->
        <filter class="ch.qos.logback.classic.filter.ThresholdFilter">
            <level>INFO</level>
        </filter>
    </appender>

    <!-- 2. 文件输出 & 滚动策略 -->
    <appender name="FILE-ERROR" class="ch.qos.logback.core.rolling.RollingFileAppender">
        <file>${LOG_DIR}/seckill-error.log</file>
        <rollingPolicy class="ch.qos.logback.core.rolling.SizeAndTimeBasedRollingPolicy">
            <!-- 按天和大小滚动：每天或文件超过100MB时滚动 -->
            <fileNamePattern>${LOG_DIR}/seckill-error.%d{yyyy-MM-dd}.%i.log.gz</fileNamePattern>
            <maxFileSize>100MB</maxFileSize>
            <maxHistory>30</maxHistory> <!-- 保留30天 -->
            <totalSizeCap>3GB</totalSizeCap> <!-- 所有错误日志总大小上限 -->
        </rollingPolicy>
        <encoder>
            <pattern>${LOG_PATTERN}</pattern>
            <charset>UTF-8</charset>
        </encoder>
        <!-- 过滤器：只记录ERROR级别的日志 -->
        <filter class="ch.qos.logback.classic.filter.ThresholdFilter">
            <level>ERROR</level>
        </filter>
    </appender>

    <appender name="FILE-ALL" class="ch.qos.logback.core.rolling.RollingFileAppender">
        <file>${LOG_DIR}/seckill-all.log</file>
        <rollingPolicy class="ch.qos.logback.core.rolling.SizeAndTimeBasedRollingPolicy">
            <fileNamePattern>${LOG_DIR}/seckill-all.%d{yyyy-MM-dd}.%i.log.gz</fileNamePattern>
            <maxFileSize>100MB</maxFileSize>
            <maxHistory>7</maxHistory> <!-- 全部日志保留7天 -->
            <totalSizeCap>5GB</totalSizeCap>
        </rollingPolicy>
        <encoder>
            <pattern>${LOG_PATTERN}</pattern>
            <charset>UTF-8</charset>
        </encoder>
    </appender>

    <!-- 3. 异步日志 (提升性能关键!) -->
    <appender name="ASYNC-FILE-ALL" class="ch.qos.logback.classic.AsyncAppender">
        <queueSize>1024</queueSize> <!-- 队列大小，可根据情况调整 -->
        <discardingThreshold>0</discardingThreshold> <!-- 队列剩余多少时开始丢弃日志(0=队列满时丢弃INFO及以下) -->
        <appender-ref ref="FILE-ALL" />
    </appender>

    <appender name="ASYNC-FILE-ERROR" class="ch.qos.logback.classic.AsyncAppender">
        <queueSize>256</queueSize>
        <discardingThreshold>0</discardingThreshold>
        <appender-ref ref="FILE-ERROR" />
    </appender>

    <!-- Root Logger 配置 -->
    <root level="INFO">
        <!-- 生产环境通常只输出到文件 -->
        <appender-ref ref="ASYNC-FILE-ALL" />
        <appender-ref ref="ASYNC-FILE-ERROR" />
        <!-- 如果是在容器中运行，也需要输出到控制台 -->
        <appender-ref ref="CONSOLE" />
    </root>

    <!-- 可以为特定包配置更详细的日志级别 -->
    <!-- <logger name="com.yourcompany.yourproject" level="DEBUG" additivity="false">
        <appender-ref ref="ASYNC-FILE-ALL" />
    </logger> -->

    <!-- 降低某些嘈杂框架的日志级别 -->
    <logger name="org.springframework" level="INFO"/>
    <logger name="org.hibernate" level="WARN"/>
</configuration>